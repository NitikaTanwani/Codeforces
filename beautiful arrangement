class Solution {
    public int[] constructArray(int n, int k) {
          int [] arr=new int[n];
           int[] vis=new int[n];
        arr[0]=1;
        vis[0]=1;
        int i=2;
        arr[1]=k+arr[0];
        vis[arr[1]-1]=1;
        k--;
        while(k>0 && i<n)
        {
            if (vis[arr[i-1]-k]!=1)
            {
                if ((arr[i-1]-k) > 0)
            {
                arr[i]=arr[i-1]-k;
                vis[arr[i]-1]=1;
            }
            else
            {
                arr[i]=arr[i-1]+k;
                vis[arr[i]-1]=1;
                
            }   
            }
            i++;
            k--;
      }
        
            for(int j=0;j<n;j++)
            {
                if(vis[j]!=1 && i < n)
                {
                    arr[i]=j+1;
                    vis[j]=0;
                    i++;
                }
            }
        
        return arr;
        /*
        for(int i=1;i<n+1;i++)
            {
                if(i==1)
                    hm[i]=i;
                if(i>1 && k!=0 )
                {hm[i]=1+k;
                    hm.add(1+k);
             
        int[] arr = hm.stream().mapToInt(i -> i).toArray();

        return arr;
    }*/
}
}
